import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '3.3.3' apply false
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
}

ext {
    jacocoVersion = '0.8.12'
    checkstyleVersion = "10.18.2"
    pmdVersion = '7.6.0'
}

group = 'org.theoriok'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}
tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'org.jgrapht:jgrapht-core:1.5.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

pmd {
    ruleSets = []
    ignoreFailures = false
    toolVersion = pmdVersion
}

pmdMain {
    ruleSetFiles = files("${project.rootDir}/config/pmd/pmd.xml")
}

pmdTest {
    ruleSetFiles = files("${project.rootDir}/config/pmd/testPmd.xml")
}

checkstyle {
    toolVersion = '10.3.3'
    ignoreFailures = false
    maxErrors = 0
    maxWarnings = 0
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
}

tasks.matching { task -> (task.name == 'jacocoTestReport') }.forEach { task ->
    task.reports {
        xml.required = true
        xml.outputLocation = file("build/reports/jacocoTestReport.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "theoriok_adventofcode"
        property "sonar.organization", "theorioksoft"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.rootDir}/build/reports/jacocoTestReport.xml"
        property "sonar.tests", "src/test"
    }
}
